"use strict";
var passport = require('koa-passport')

module.exports=function(app, config){
<% if(program.session){ -%>
    passport.serializeUser(function(user, done) {
        done(null, user.id)
    })
    
    passport.deserializeUser(function(id, done) {
        let user={ id: 1, username: 'admin' }
        done(null, user)
    })
<% } -%>

    var LocalStrategy = require('passport-local').Strategy
    passport.use(new LocalStrategy(function(username, password, done) {
        let user={ id: 1, username: 'admin' };
        if (username === 'admin' && password === 'admin') {
            done(null, user)
        } else {
            done(null, false)
        }
    }))

<% if(program.auth.facebook){ -%>
    var FacebookStrategy = require('passport-facebook').Strategy
    passport.use(new FacebookStrategy(config.facebook, function (token, tokenSecret, profile, done) {
        let user=profile
        done(null, user)
    }))
<% } -%>

<% if(program.auth.google){ -%>
    var GoogleStrategy = require('passport-google').Strategy
    passport.use(new GoogleStrategy(config.google, function(identifier, profile, done) {
        let user=profile
        done(null, user)
    }))
<% } -%>

<% if(program.auth.github){ -%>
    var GithubStrategy = require('passport-github').Strategy;
    passport.use(new GithubStrategy(config.github, function(accessToken, refreshToken, profile, done) {
        let user = profile
        return done(null, user)
    }))
<% } -%>

<% if(program.auth.bitbucket){ -%>
    var BitbucketStrategy = require('passport-bitbucket').Strategy;
    passport.use(new BitbucketStrategy(config.bitbucket, function(token, tokenSecret, profile, done) {
        let user = profile
        return done(null, user)
    }))
<% } -%>
        
    return passport
}